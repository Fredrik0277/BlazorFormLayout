@using System.Linq.Expressions
@typeparam TType
<div class="@formclass">
    <label for="@Id" class="@labelclass">@Label</label>
    <div class="@divclass">
        @ChildContent
        @if(ValidationFor != null)
        {
            <ValidationMessage For="@ValidationFor" />
        }
    </div>
</div>
@code
{
    /// <summary>
    /// Form field label
    /// </summary>
    [Parameter] public string Label { get; set; }

    /// <summary>
    /// Field Id if any
    /// </summary>
    [Parameter] public string Id { get; set; }

    [Parameter] public RenderFragment ChildContent { get; set; }

    /// <summary>
    /// Cascading layout source
    /// </summary>
    [CascadingParameter] public Orientation Orientation { get; set; }

    /// <summary>
    /// Validation param if present
    /// </summary>
    [Parameter] public Expression<Func<TType>> ValidationFor { get; set; }

    /// <summary>
    /// Form orientation
    /// </summary>
    private bool IsVertical => (Orientation == Orientation.Vertical);

    private string formclass => IsVertical ? "form-group" : "form-group row";

    private string labelclass => IsVertical ? "" : "col-sm-2 col-form-label";

    private string divclass => IsVertical ? "" : "col-sm-10";
}